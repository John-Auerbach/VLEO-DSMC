SPARTA (20 Jan 2025)
Running on 1 MPI task(s)
# SETUP --------------------------------------------------------------------------------------

shell "bash -c 'rm -f dumps/*.dat'"

shell "mkdir -p dumps"

units           si
seed            11111
dimension       3

# outflow in +x, periodic y,z. will inject at xlo (x=0)
boundary        o p p

# domain size (m)
variable        xmin equal -1.1
variable        xmax equal 1.1
variable        ymin equal -1.1
variable 	ymax equal 1.1
variable	zmin equal -1.1
variable	zmax equal 1.1

variable	Lx equal ${xmax}-${xmin}
variable	Lx equal 1.1-${xmin}
variable	Lx equal 1.1--1.1
variable        Ly equal ${ymax}-${ymin}
variable        Ly equal 1.1-${ymin}
variable        Ly equal 1.1--1.1
variable        Lz equal ${zmax}-${zmin}
variable        Lz equal 1.1-${zmin}
variable        Lz equal 1.1--1.1

create_box      ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 1.1
Created orthogonal box = (-1.1 -1.1 -1.1) to (1.1 1.1 1.1)

# Load atmospheric data from NRLMSIS (run: python3 tools/load_atm_data.py)
variable        rho  file data/rho.dat
variable        nrho file data/nrho.dat
variable        T    file data/T.dat
variable        vx   file data/vx.dat

print "Loaded NRLMSIS data: rho=${rho} nrho=${nrho} T=${T} vx=${vx}"
Loaded NRLMSIS data: rho=0.00000061379 nrho=1276141830708372684 T=179.32939 vx=7844.

variable 	kB equal 1.380649e-23  # J/K
variable 	d equal 3.7e-10  # m
variable 	R equal 287.05 # (J / kg*K)
variable 	lambda equal ${kB}*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) # m
variable 	lambda equal 1.380649e-23*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*179.32939/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*179.32939/(sqrt(2.0)*PI*3.7e-10*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*179.32939/(sqrt(2.0)*PI*3.7e-10*3.7e-10*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*179.32939/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00000061379*${R}) 
variable 	lambda equal 1.380649e-23*179.32939/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00000061379*287.05) 
variable	vbar equal sqrt(8*${kB}*${T}/(PI*${rho}/${nrho})) # m/s
variable	vbar equal sqrt(8*1.380649e-23*${T}/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*179.32939/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*179.32939/(PI*0.00000061379/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*179.32939/(PI*0.00000061379/1276141830708372684)) 

print "MEAN FREE PATH = ${lambda} m"
MEAN FREE PATH = 23.1041010567991 m
print "MEAN MOLEC VEL = ${vbar} m/s"
MEAN MOLEC VEL = 114.492490416389 m/s

# grid resolution

variable	dx equal ${lambda}/3 # m
variable	dx equal 23.1041010567991/3 
variable	mct equal ${lambda}/${vbar} # s
variable	mct equal 23.1041010567991/${vbar} 
variable	mct equal 23.1041010567991/114.492490416389 
variable	mtt equal ${dx}/${vbar} # s
variable	mtt equal 7.70136701893303/${vbar} 
variable	mtt equal 7.70136701893303/114.492490416389 
variable	dt equal ((${mct}<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 # min(${mct},${mtt})/3.0
variable	dt equal ((0.201795776935007<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.201795776935007<0.0672652589783357)*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.201795776935007<0.0672652589783357)*0.201795776935007+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.201795776935007<0.0672652589783357)*0.201795776935007+(0.201795776935007>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.201795776935007<0.0672652589783357)*0.201795776935007+(0.201795776935007>=0.0672652589783357)*${mtt})/3.0 
variable	dt equal ((0.201795776935007<0.0672652589783357)*0.201795776935007+(0.201795776935007>=0.0672652589783357)*0.0672652589783357)/3.0 

print "CELL SIZE MUST BE LESS THAN ${dx} m"
CELL SI