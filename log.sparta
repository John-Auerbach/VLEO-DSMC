SPARTA (20 Jan 2025)
Running on 1 MPI task(s)
# SETUP --------------------------------------------------------------------------------------

shell "bash -c 'rm -f dumps/*.dat'"

shell "mkdir -p dumps"

units           si
seed            11111
dimension       3

# outflow in +x, periodic y,z. will inject at xlo (x=0)
boundary        o p p

# domain size (m)
variable        xmin equal -1.1
variable        xmax equal 1.1
variable        ymin equal -1.1
variable 	    ymax equal 1.1
variable	    zmin equal -1.1
variable	    zmax equal 1.1

variable	    Lx equal ${xmax}-${xmin}
variable	    Lx equal 1.1-${xmin}
variable	    Lx equal 1.1--1.1
variable        Ly equal ${ymax}-${ymin}
variable        Ly equal 1.1-${ymin}
variable        Ly equal 1.1--1.1
variable        Lz equal ${zmax}-${zmin}
variable        Lz equal 1.1-${zmin}
variable        Lz equal 1.1--1.1

create_box      ${xmin} ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 ${xmax} ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 ${ymin} ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 ${ymax} ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 ${zmin} ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 ${zmax}
create_box      -1.1 1.1 -1.1 1.1 -1.1 1.1
Created orthogonal box = (-1.1 -1.1 -1.1) to (1.1 1.1 1.1)

# Load atmospheric data from NRLMSIS (run: python3 tools/load_atm_data.py)
variable        rho  file data/rho.dat
variable        nrho file data/nrho.dat
variable        T    file data/T.dat
variable        vx   file data/vx.dat

print "Loaded NRLMSIS data: rho=${rho} nrho=${nrho} T=${T} vx=${vx}"
Loaded NRLMSIS data: rho=0.00000759080 nrho=15781995163693812940 T=193.33846 vx=7853.

variable 	kB equal 1.380649e-23  # J/K
variable 	d equal 3.7e-10  # m
variable 	R equal 287.05 # (J / kg*K)
variable 	lambda equal ${kB}*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) # m
variable 	lambda equal 1.380649e-23*${T}/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*193.33846/(sqrt(2.0)*PI*${d}*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*193.33846/(sqrt(2.0)*PI*3.7e-10*${d}*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*193.33846/(sqrt(2.0)*PI*3.7e-10*3.7e-10*${rho}*${R}) 
variable 	lambda equal 1.380649e-23*193.33846/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00000759080*${R}) 
variable 	lambda equal 1.380649e-23*193.33846/(sqrt(2.0)*PI*3.7e-10*3.7e-10*0.00000759080*287.05) 
variable	vbar equal sqrt(8*${kB}*${T}/(PI*${rho}/${nrho})) # m/s
variable	vbar equal sqrt(8*1.380649e-23*${T}/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*193.33846/(PI*${rho}/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*193.33846/(PI*0.00000759080/${nrho})) 
variable	vbar equal sqrt(8*1.380649e-23*193.33846/(PI*0.00000759080/15781995163693812940)) 

print "MEAN FREE PATH = ${lambda} m"
MEAN FREE PATH = 2.01413287839467 m
print "MEAN MOLEC VEL = ${vbar} m/s"
MEAN MOLEC VEL = 118.879783227093 m/s

# grid resolution

variable	dx equal ${lambda}/3 # m
variable	dx equal 2.01413287839467/3 
variable	mct equal ${lambda}/${vbar} # s
variable	mct equal 2.01413287839467/${vbar} 
variable	mct equal 2.01413287839467/118.879783227093 
variable	mtt equal ${dx}/${vbar} # s
variable	mtt equal 0.671377626131557/${vbar} 
variable	mtt equal 0.671377626131557/118.879783227093 
variable	dt equal ((${mct}<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 # min(${mct},${mtt})/3.0
variable	dt equal ((0.0169426022130872<${mtt})*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.0169426022130872<0.00564753407102906)*${mct}+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.0169426022130872<0.00564753407102906)*0.0169426022130872+(${mct}>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.0169426022130872<0.00564753407102906)*0.0169426022130872+(0.0169426022130872>=${mtt})*${mtt})/3.0 
variable	dt equal ((0.0169426022130872<0.00564753407102906)*0.0169426022130872+(0.0169426022130872>=0.00564753407102906)*${mtt})/3.0 
variable	dt equal ((0.0169426022130872<0.00564753407102906)*0.0169426022130872+(0.0169426022130872>=0.00564753407102906)*0.00564753407102906)/3.0 

print "CELL SIZE MUST BE LESS THAN ${dx} m"
CELL SIZE MUST BE LESS THAN 0.671377626131557 m
print "MEAN COLL TIME = ${mct} s"
MEAN COLL TIME = 0.0169426022130872 s
print "MEAN TRANSIT TIME = ${mtt} s"
MEAN TRANSIT TIME = 0.00564753407102906 s
print "TIMESTEP MUST BE < ${dt} s" # timestep set at end of script
TIMESTEP MUST BE < 0.00188251135700969 s

create_grid	150 100 50
Created 750000 child grid cells
  CPU time = 0.599357 secs
  create/ghost percent = 29.4516 70.5484
balance_grid    rcb part
Balance grid migrated 0 cells
  CPU time = 0.421041 secs
  reassign/sort/migrate/ghost percent = 26.9789 1.37754 6.04788 65.5957

variable	diag_freq   equal 100 # dump diagnostics every _ timesteps
variable 	tstep       equal 1.0e-7 # choose small timestep << cell flight time; start 1e-7 s

# SURFACE GEOMETRY ----------------------------------------------------------------------------

read_surf	surf/ampt_box.surf  group ampt        # create surface group "ampt"
  12 triangles
  -0.5 0.5 xlo xhi
  -0.1 0.1 ylo yhi
  -0.1 0.1 zlo zhi
  0.2 min triangle edge length
  0.02 min triangle area
  2024 0 = cells overlapping surfs, overlap cells with unmarked corner pts
  78 tiny edges removed
  745800 2176 2024 = cells outside/inside/overlapping surfs
  2024 = surf cells with 1,2,etc splits
  10.608 10.608 = cell-wise and global flow volume
  CPU time = 0.53658 secs
  read/check/sort/surf2grid/ghost/inout/particle percent = 0.175022 0.0165735 5.38319 41.3355 53.0897 22.1969 0
  surf2grid time = 0.221798 secs
  map/comm1/comm2/comm3/comm4/split percent = 39.8655 0.00720207 33.8263 2.26693 4.40853 8.06632
read_surf	surf/xlo_bdy.surf  group xlo_bdy transparent
  2 triangles
  -1 -1 xlo xhi
  -1 1 ylo yhi
  -1 1 zlo zhi
  2 min triangle edge length
  2 min triangle area
  2024 0 = cells overlapping surfs, overlap cells with unmarked corner pts
  156 tiny edges removed
  745800 2176 2024 = cells outside/inside/overlapping surfs
  2024 = surf cells with 1,2,etc splits
  10.608 10.608 = cell-wise and global flow volume
  CPU time = 0.50011 secs
  read/check/sort/surf2grid/ghost/inout/particle percent = 0.163329 0.0081998 5.71116 40.2772 53.8402 29.4629 0
  surf2grid time = 0.20143 secs
  map/comm1/comm2/comm3/comm4/split percent = 36.1167 0.00840377 29.5031 2.82485 5.3532 11.618
read_surf	surf/xhi_bdy.surf  group xhi_bdy transparent
  2 triangles
  1 1 xlo xhi
  -1 1 ylo yhi
  -1 1 zlo zhi
  2 min triangle edge length
  2 min triangle area
  2024 0 = cells overlapping surfs, overlap cells with unmarked corner pts
  234 tiny edges removed
  745800 2176 2024 = cells outside/inside/overlapping surfs
  2024 = surf cells with 1,2,etc splits
  10.608 10.608 = cell-wise and global flow volume
  CPU time = 0.564022 secs
  read/check/sort/surf2grid/ghost/inout/particle percent = 0.129603 0.0109905 5.25033 38.01 56.5991 23.0013 0
  surf2grid time = 0.214385 secs
  map/comm1/comm2/comm3/comm4/split percent = 41.3948 0.008452 26.6124 3.64059 6.15762 9.84303

# SPECIES AND MIXTURE -------------------------------------------------------------------------

# use local species file
species         species/air.species N2 O2

# define inflow gas mixture named atm
mixture 	atm N2 frac 0.79
mixture		atm O2 frac 0.21
mixture     	atm nrho ${nrho} vstream ${vx} 0.0 0.0 temp ${T}
mixture     	atm nrho 15781995163693812940 vstream ${vx} 0.0 0.0 temp ${T}
mixture     	atm nrho 15781995163693812940 vstream 7853. 0.0 0.0 temp ${T}
mixture     	atm nrho 15781995163693812940 vstream 7853. 0.0 0.0 temp 193.33846

# particle weighting: set target of 2e5 sim particles, calculate weighting factor
variable        Ns_target equal 100000.0
variable        Vol       equal ${Lx}*${Ly}*${Lz}
variable        Vol       equal 2.2*${Ly}*${Lz}
variable        Vol       equal 2.2*2.2*${Lz}
variable        Vol       equal 2.2*2.2*2.2
variable        fnum      equal ${nrho}*${Vol}/${Ns_target}
variable        fnum      equal 15781995163693812940*${Vol}/${Ns_target}
variable        fnum      equal 15781995163693812940*10.648/${Ns_target}
variable        fnum      equal 15781995163693812940*10.648/100000
global          fnum ${fnum} # global bc will be queried by each new particle
global          fnum 1.68046684503012e+15 

variable	parts_per equal ${nrho}/${Ns_target}
variable	parts_per equal 15781995163693812940/${Ns_target}
variable	parts_per equal 15781995163693812940/100000
print "particles per particle = ${parts_per}"
particles per particle = 157819951636938

# global useful for stat query later
global          nrho ${nrho}
global          nrho 15781995163693812940

# create an initial fill (n 0 -> auto compute # of particles from fnum and nrho)
create_particles	atm n 0
Created 99624 particles
  CPU time = 0.034878 secs

# continuous inflow; inject gas from xlo every step (fix -> run each time step, ID: "in")
fix		in emit/face atm xlo

# SURFACE COLLISIONS --------------------------------------------------------------------------

                # compute ID, type, surf group, mixture, property (energy flux on surface)
compute         compute_qwall surf ampt atm etot # etot = kinetic + internal energy. W/m^2 *multi-column array for all surface groups

                # runningâ€‘average every step so flux is never exactly zero (exponential decay)
fix             flux ave/surf ampt 1 1 1 c_compute_qwall[1] ave running  # running mean, updates each step
fix             fix_Tsurf surf/temp ampt 1 f_flux 300.0 0.9 Tsurf  # Stefan-Boltzmann


surf_collide 	wall diffuse s_Tsurf 0.9           # define collision model "wall", random dir, use local facet temp, acc
surf_modify 	ampt collide wall # attach model to facets

surf_collide    trans transparent                  # define transparent collision model for boundary surfaces
surf_modify     xlo_bdy collide trans              # attach transparent model to xlo_bdy
surf_modify     xhi_bdy collide trans              # attach transparent model to xhi_bdy

# DIAGNOSTICS ---------------------------------------------------------------------------------

                # ID, data type, mixture, every _ steps, filename, columns (particle data)
dump            dump_part particle atm ${diag_freq} dumps/part.*.dat id type x y z vx vy vz
dump            dump_part particle atm 100 dumps/part.*.dat id type x y z vx vy vz

                # ID, type, region, mixture, property (gas temperature per grid cell)
compute         compute_Tgrid grid all atm temp # *per-grid array
                # ID, data type, region, every _ steps, filename, columns (cell coords and gas temperature)
dump 		dump_grid grid all ${diag_freq} dumps/grid.*.dat id xlo ylo zlo xc yc zc c_compute_Tgrid[*] # compute for all columns (gases) in array
dump 		dump_grid grid all 100 dumps/grid.*.dat id xlo ylo zlo xc yc zc c_compute_Tgrid[*] 

		# ID, data type, region, every _ steps, filename, columns (facet id, triangle vertices, surface temperature)
dump    	dump_surf surf ampt ${diag_freq} dumps/surf.*.dat id v1x v1y v1z v2x v2y v2z v3x v3y v3z f_flux[*] s_Tsurf
dump    	dump_surf surf ampt 100 dumps/surf.*.dat id v1x v1y v1z v2x v2y v2z v3x v3y v3z f_flux[*] s_Tsurf

# DRAG CALC (short for caclulator) ------------------------
# boundary method: use mass flux and kinetic energy flux through transparent surface.
                    # these can be used to find pressure in front and behind object which gives F_drag

compute         xlo_flux surf xlo_bdy atm mflux ke                                      # mflux = mass flux, ke = kinetic energy flux
compute         xlo_mflux_avg reduce ave c_xlo_flux[1]                                  # average mass flux
compute         xlo_ke_avg reduce ave c_xlo_flux[2]                                     # average KE flux
fix             xlo_out ave/time 1 1 1 c_xlo_mflux_avg c_xlo_ke_avg ave running file dumps/xlo_flux.dat

compute         xhi_flux surf xhi_bdy atm mflux ke                                      # mflux = mass flux, ke = kinetic energy flux
compute         xhi_mflux_avg reduce ave c_xhi_flux[1]                                  # average mass flux
compute         xhi_ke_avg reduce ave c_xhi_flux[2]                                     # average KE flux
fix             xhi_out ave/time 1 1 1 c_xhi_mflux_avg c_xhi_ke_avg ave running file dumps/xhi_flux.dat


# sum of surface forces (direct):
                # compute per-surface-element force components (fx,fy,fz) for group ampt
compute         surfF surf ampt atm fx fy fz
                # time-average per-surf forces (running mean)
fix             surfavg ave/surf ampt 1 1 1 c_surfF[*] ave running

                # reduce (sum) per-surf averaged fx -> global c_drag[1]
compute         drag reduce sum f_surfavg[1]

# write total drag (timestep, drag) to a simple file every 1 step
# use fix ave/time to write the scalar compute c_drag to file (one line per output: timestep value)
fix             dragout ave/time 1 1 1 c_drag file dumps/direct_drag.dat mode scalar

# ----------------------------------------------------------

# cell-averaged (streaming+thermal) temperature
compute         Tbox temp # define a compute Tbox that calculates domain everaged temp
stats           ${diag_freq} # print diagnostics every _ timesteps
stats           100 
stats_style     step cpu np nattempt ncoll c_Tbox c_drag # print timestep, runtime, particles, collision stats, avg temp, total drag

timestep        ${tstep}
timestep        1e-07
collide		    vss atm vss/air.vss # variable soft sphere model
run             1000
Memory usage per proc in Mbytes:
  particles (ave,min,max) = 11.8125 11.8125 11.8125
  grid      (ave,min,max) = 132.364 132.364 132.364
  surf      (ave,min,max) = 0.00201416 0.00201416 0.00201416
  total     (ave,min,max) = 155.624 155.624 155.624
Step CPU Np Natt Ncoll c_Tbox c_drag 
       0            0    99624        0        0    71528.144            0 
     100    2.9320531   100039        0        0    71502.178    2.6568524 
     200    6.1804311   100559        0        0    71476.154    2.6490132 
     300    9.1451342   100043        0        0    71459.235    2.5566174 
     400    12.030295    99720        0        0    71425.019     2.543004 
     500    14.756374   100501        1        1    71395.921    2.5975977 
     600    17.519753   100483        2        1    71394.205    2.6155181 
     700    20.332023    99864        0        0    71367.404    2.6220258 
     800    21.472072   100019        1        1     71310.87    2.6566567 
     900    24.346112   100490        2        0    71292.317    2.6837286 
    1000    27.130151   100166        2        2    71268.632    2.7291069 
Loop time of 27.1302 on 1 procs for 1000 steps with 100166 particles

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Move    | 7.8724     | 7.8724     | 7.8724     |   0.0 | 29.02
Coll    | 4.9677     | 4.9677     | 4.9677     |   0.0 | 18.31
Sort    | 5.4353     | 5.4353     | 5.4353     |   0.0 | 20.03
Comm    | 0.0040023  | 0.0040023  | 0.0040023  |   0.0 |  0.01
Modify  | 0.20383    | 0.20383    | 0.20383    |   0.0 |  0.75
Output  | 8.6453     | 8.6453     | 8.6453     |   0.0 | 31.87
Other   |            | 0.001682   |            |       |  0.01

Particle moves    = 100198819 (100M)
Cells touched     = 105648362 (106M)
Particle comms    = 0 (0K)
Boundary collides = 0 (0K)
Boundary exits    = 35193 (35.2K)
SurfColl checks   = 1648326 (1.65M)
SurfColl occurs   = 59248 (59.2K)
Surf reactions    = 0 (0K)
Collide attempts  = 490 (0.49K)
Collide occurs    = 332 (0.332K)
Reactions         = 0 (0K)
Particles stuck   = 0
Axisymm bad moves = 0

Particle-moves/CPUsec/proc: 3.69326e+06
Particle-moves/step: 100199
Cell-touches/particle/step: 1.05439
Particle comm iterations/step: 1
Particle fraction communicated: 0
Particle fraction colliding with boundary: 0
Particle fraction exiting boundary: 0.000351232
Surface-checks/particle/step: 0.0164506
Surface-collisions/particle/step: 0.000591304
Surf-reactions/particle/step: 0
Collision-attempts/particle/step: 4.89028e-06
Collisions/particle/step: 3.31341e-06
Reactions/particle/step: 0

Particles: 100166 ave 100166 max 100166 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Cells:      750000 ave 750000 max 750000 min
Histogram: 1 0 0 0 0 0 0 0 0 0
GhostCell: 0 ave 0 max 0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
EmptyCell: 0 ave 0 max 0 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Surfs:    16 ave 16 max 16 min
Histogram: 1 0 0 0 0 0 0 0 0 0
GhostSurf: 0 ave 0 max 0 min
Histogram: 1 0 0 0 0 0 0 0 0 0

shell "rm -f data/rho.dat data/nrho.dat data/T.dat data/vx.dat"
